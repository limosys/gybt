/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiPostSubmitBatchRequest {
    #[serde(rename = "entries", skip_serializing_if = "Option::is_none")]
    pub entries: Option<Vec<models::ApiPostSubmitRequestEntry>>,
    #[serde(rename = "submitStrategy", skip_serializing_if = "Option::is_none")]
    pub submit_strategy: Option<models::ApiSubmitStrategy>,
    #[serde(rename = "useBundle", skip_serializing_if = "Option::is_none")]
    pub use_bundle: Option<bool>,
    #[serde(rename = "frontRunningProtection", skip_serializing_if = "Option::is_none")]
    pub front_running_protection: Option<bool>,
}

impl ApiPostSubmitBatchRequest {
    pub fn new() -> ApiPostSubmitBatchRequest {
        ApiPostSubmitBatchRequest {
            entries: None,
            submit_strategy: None,
            use_bundle: None,
            front_running_protection: None,
        }
    }
}

