/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiTickerV2 {
    #[serde(rename = "market", skip_serializing_if = "Option::is_none")]
    pub market: Option<String>,
    #[serde(rename = "marketAddress", skip_serializing_if = "Option::is_none")]
    pub market_address: Option<String>,
    #[serde(rename = "bid", skip_serializing_if = "Option::is_none")]
    pub bid: Option<f64>,
    #[serde(rename = "bidSize", skip_serializing_if = "Option::is_none")]
    pub bid_size: Option<f64>,
    #[serde(rename = "ask", skip_serializing_if = "Option::is_none")]
    pub ask: Option<f64>,
    #[serde(rename = "askSize", skip_serializing_if = "Option::is_none")]
    pub ask_size: Option<f64>,
}

impl ApiTickerV2 {
    pub fn new() -> ApiTickerV2 {
        ApiTickerV2 {
            market: None,
            market_address: None,
            bid: None,
            bid_size: None,
            ask: None,
            ask_size: None,
        }
    }
}

