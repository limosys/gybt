/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiTokenBalance {
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "tokenMint", skip_serializing_if = "Option::is_none")]
    pub token_mint: Option<String>,
    #[serde(rename = "settledAmount", skip_serializing_if = "Option::is_none")]
    pub settled_amount: Option<f64>,
    #[serde(rename = "unsettledAmount", skip_serializing_if = "Option::is_none")]
    pub unsettled_amount: Option<f64>,
    #[serde(rename = "openOrdersAmount", skip_serializing_if = "Option::is_none")]
    pub open_orders_amount: Option<f64>,
}

impl ApiTokenBalance {
    pub fn new() -> ApiTokenBalance {
        ApiTokenBalance {
            symbol: None,
            token_mint: None,
            settled_amount: None,
            unsettled_amount: None,
            open_orders_amount: None,
        }
    }
}

