/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CommonInfinity {
    #[serde(rename = "INF_NOT")]
    Not,
    #[serde(rename = "INF_POSITIVE")]
    Positive,
    #[serde(rename = "INF_NEGATIVE")]
    Negative,

}

impl std::fmt::Display for CommonInfinity {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Not => write!(f, "INF_NOT"),
            Self::Positive => write!(f, "INF_POSITIVE"),
            Self::Negative => write!(f, "INF_NEGATIVE"),
        }
    }
}

impl Default for CommonInfinity {
    fn default() -> CommonInfinity {
        Self::Not
    }
}

