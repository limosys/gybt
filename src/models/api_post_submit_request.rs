/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiPostSubmitRequest {
    #[serde(rename = "transaction", skip_serializing_if = "Option::is_none")]
    pub transaction: Option<Box<models::ApiTransactionMessage>>,
    #[serde(rename = "skipPreFlight", skip_serializing_if = "Option::is_none")]
    pub skip_pre_flight: Option<bool>,
    #[serde(rename = "frontRunningProtection", skip_serializing_if = "Option::is_none")]
    pub front_running_protection: Option<bool>,
    #[serde(rename = "tip", skip_serializing_if = "Option::is_none")]
    pub tip: Option<String>,
    #[serde(rename = "useStakedRPCs", skip_serializing_if = "Option::is_none")]
    pub use_staked_rpcs: Option<bool>,
    #[serde(rename = "fastBestEffort", skip_serializing_if = "Option::is_none")]
    pub fast_best_effort: Option<bool>,
}

impl ApiPostSubmitRequest {
    pub fn new() -> ApiPostSubmitRequest {
        ApiPostSubmitRequest {
            transaction: None,
            skip_pre_flight: None,
            front_running_protection: None,
            tip: None,
            use_staked_rpcs: None,
            fast_best_effort: None,
        }
    }
}

