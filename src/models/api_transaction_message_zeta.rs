/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiTransactionMessageZeta {
    #[serde(rename = "header", skip_serializing_if = "Option::is_none")]
    pub header: Option<Box<models::ApiTransactionMessageHeader>>,
    #[serde(rename = "accountKeys", skip_serializing_if = "Option::is_none")]
    pub account_keys: Option<Vec<String>>,
    #[serde(rename = "recentBlockhash", skip_serializing_if = "Option::is_none")]
    pub recent_blockhash: Option<String>,
    #[serde(rename = "instructions", skip_serializing_if = "Option::is_none")]
    pub instructions: Option<Vec<models::ApiInstruction>>,
}

impl ApiTransactionMessageZeta {
    pub fn new() -> ApiTransactionMessageZeta {
        ApiTransactionMessageZeta {
            header: None,
            account_keys: None,
            recent_blockhash: None,
            instructions: None,
        }
    }
}

