/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ApiProject {
    #[serde(rename = "P_UNKNOWN")]
    Unknown,
    #[serde(rename = "P_ALL")]
    All,
    #[serde(rename = "P_JUPITER")]
    Jupiter,
    #[serde(rename = "P_RAYDIUM")]
    Raydium,
    #[serde(rename = "P_SERUM")]
    Serum,
    #[serde(rename = "P_OPENBOOK")]
    Openbook,

}

impl std::fmt::Display for ApiProject {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Unknown => write!(f, "P_UNKNOWN"),
            Self::All => write!(f, "P_ALL"),
            Self::Jupiter => write!(f, "P_JUPITER"),
            Self::Raydium => write!(f, "P_RAYDIUM"),
            Self::Serum => write!(f, "P_SERUM"),
            Self::Openbook => write!(f, "P_OPENBOOK"),
        }
    }
}

impl Default for ApiProject {
    fn default() -> ApiProject {
        Self::Unknown
    }
}

