/*
 * Trader API
 *
 * Easy-to-use API for interacting with trader services on the Solana blockchain, powered by bloXroute Labs.
 *
 * The version of the OpenAPI document: 1.6
 * Contact: support@bloxroute.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiCandle {
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    #[serde(rename = "open", skip_serializing_if = "Option::is_none")]
    pub open: Option<f64>,
    #[serde(rename = "close", skip_serializing_if = "Option::is_none")]
    pub close: Option<f64>,
    #[serde(rename = "low", skip_serializing_if = "Option::is_none")]
    pub low: Option<f64>,
    #[serde(rename = "high", skip_serializing_if = "Option::is_none")]
    pub high: Option<f64>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<f64>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<f64>,
}

impl ApiCandle {
    pub fn new() -> ApiCandle {
        ApiCandle {
            start_time: None,
            update_time: None,
            open: None,
            close: None,
            low: None,
            high: None,
            amount: None,
            volume: None,
            count: None,
        }
    }
}

